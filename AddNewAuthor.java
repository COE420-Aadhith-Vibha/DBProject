package jdbcgui;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author wissam
 */
public class AddNewAuthor extends javax.swing.JFrame {

    /**
     * Creates new form AddEmployee
     */
    myDBCon dbCon;
    ResultSet rs;    
    
    public AddNewAuthor() {
        initComponents();
        
        // center form in screen 
        this.setLocationRelativeTo(null);
      
        // set all error labels to invisible
        lblEmailError.setVisible(false);
        lblNameError.setVisible(false);
        lblAuthorIdError.setVisible(false);

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtAuthorId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtAuthorName = new javax.swing.JTextField();
        btnAddNewAuthor = new javax.swing.JButton();
        lblAuthorIdError = new javax.swing.JLabel();
        lblEmailError = new javax.swing.JLabel();
        lblNameError = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Login User");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Author");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(180, 40, 298, 44);

        txtAuthorId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtAuthorId);
        txtAuthorId.setBounds(240, 120, 200, 28);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Author Email:");
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(100, 200, 130, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Author ID:");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8);
        jLabel8.setBounds(130, 120, 100, 22);

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtEmail);
        txtEmail.setBounds(240, 200, 200, 28);

        txtAuthorName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtAuthorName);
        txtAuthorName.setBounds(240, 160, 200, 28);

        btnAddNewAuthor.setFont(new java.awt.Font("Forte", 0, 24)); // NOI18N
        btnAddNewAuthor.setText("Add New");
        btnAddNewAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewAuthorActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddNewAuthor);
        btnAddNewAuthor.setBounds(250, 270, 127, 41);

        lblAuthorIdError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblAuthorIdError.setForeground(new java.awt.Color(255, 0, 0));
        lblAuthorIdError.setText("error label");
        getContentPane().add(lblAuthorIdError);
        lblAuthorIdError.setBounds(450, 120, 110, 22);

        lblEmailError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblEmailError.setForeground(new java.awt.Color(255, 0, 0));
        lblEmailError.setText("error label");
        getContentPane().add(lblEmailError);
        lblEmailError.setBounds(450, 200, 100, 22);

        lblNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblNameError.setText("error label");
        getContentPane().add(lblNameError);
        lblNameError.setBounds(450, 160, 120, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("Author Name:");
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9);
        jLabel9.setBounds(100, 160, 130, 22);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jdbcgui/author.jpg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(-20, -120, 1010, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void clearErrorLabels() {
        // erase error label text and set visibility to false 
        lblNameError.setText("");
        lblNameError.setVisible(false);
        lblAuthorIdError.setText("");
        lblAuthorIdError.setVisible(false);
        lblEmailError.setText("");
        lblEmailError.setVisible(false);
    }
    
    public boolean isIntPositive(String s) {
        try {
            int n = Integer.parseInt(s);
            if (n > 0)
                return true;
            else
                return false;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    boolean isValidData() {
        // check validity of all values entered 
        boolean result = true;
        clearErrorLabels();
        
        if (txtEmail.getText().trim().isEmpty() || txtEmail.getText().trim().length() > 30) {
            if (txtEmail.getText().trim().isEmpty()) {
                lblEmailError.setText("Invalid. Cannot be empty.");
            } else if (txtEmail.getText().trim().length() > 30) {
                lblEmailError.setText("Invalid. Must be < 30 characters.");
            }
            lblEmailError.setVisible(true);
            result = false;
        }
        
        if (txtAuthorName.getText().trim().isEmpty() || txtAuthorName.getText().trim().length() > 25) {
            if (txtAuthorName.getText().trim().isEmpty()) {
                lblNameError.setText("Invalid. Cannot be empty.");
            } else if (txtAuthorName.getText().trim().length() > 25) {
                lblNameError.setText("Invalid. Must be < 25 characters.");
            }
            lblNameError.setVisible(true);
            result = false;
        }
        
        if (txtAuthorId.getText().trim().isEmpty() || (txtAuthorId.getText().trim().length() != 4) || !isIntPositive(txtAuthorId.getText().trim())) 
        {
            if (txtAuthorId.getText().trim().isEmpty()) {
                lblAuthorIdError.setText("Invalid. Cannot be empty.");
            } else if (txtAuthorId.getText().trim().length() != 4) {
                lblAuthorIdError.setText("Invalid. Must be 4 digits long.");
            } else if (!isIntPositive(txtAuthorId.getText()))
                lblAuthorIdError.setText("Invalid. Must be 4 digit positive integers.");
            lblAuthorIdError.setVisible(true);
            result = false;
        }
        
        return result;
    }

    void clearInputBoxes() {
        // clear all text boxes and set the user type combo to the default value
        txtEmail.setText("");
        txtAuthorName.setText("");
        txtAuthorId.setText("");
    }
    
    private boolean isDuplicate(String authorId) throws SQLException {
        boolean isduplicate = false;
        rs = dbCon.executeStatement("SELECT * FROM AUTHOR WHERE AUTHOR_ID = " + authorId);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    
    private void btnAddNewAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewAuthorActionPerformed
        // TODO add your handling code here:
        boolean validation = isValidData();
         try {
            if (validation && !isDuplicate(txtAuthorId.getText().trim())){

                String prepSQL = "INSERT INTO AUTHOR (AUTHOR_ID, AUTHOR_NAME, EMAIL) VALUES ("
                        + txtAuthorId.getText().trim() + ", "
                        + "'" + txtAuthorName.getText().trim() + "', "
                        + "'" + txtEmail.getText().trim() + "')";

                int result = dbCon.executePrepared(prepSQL);
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New Author added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                } else {

                }

                rs.close();
            } else {
                if (!validation){
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else{
                    javax.swing.JLabel label = new javax.swing.JLabel("Author already exists. Use a different Author ID.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new Author.");
        }
        // verify input data        
        // verify that new user does not currently exist 
        // if all validations are successful then enter the new user
        
    }//GEN-LAST:event_btnAddNewAuthorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewAuthor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblAuthorIdError;
    private javax.swing.JLabel lblEmailError;
    private javax.swing.JLabel lblNameError;
    private javax.swing.JTextField txtAuthorId;
    private javax.swing.JTextField txtAuthorName;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables
}
